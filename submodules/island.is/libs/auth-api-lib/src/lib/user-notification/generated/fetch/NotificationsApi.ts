/* tslint:disable */
/* eslint-disable */
/**
 * Notification Service
 * Creates and stores notifications AND sends as mobile push notifications and emails
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from './runtime'
import {
  CreateHnippNotificationDto,
  CreateHnippNotificationDtoToJSON,
  CreateNotificationResponse,
  CreateNotificationResponseFromJSON,
} from './types/dto'

export interface NotificationsControllerCreateHnippNotificationRequest {
  createHnippNotificationDto: CreateHnippNotificationDto
}

export interface NotificationsControllerGetNotificationTemplateRequest {
  templateId: string
  locale?: string
}

export interface NotificationsControllerGetNotificationTemplatesRequest {
  locale?: string
}

/**
 *
 */
export class NotificationsApi extends runtime.BaseAPI {
  /**
   * Creates a new notification and adds to queue
   */
  async notificationsControllerCreateHnippNotificationRaw(
    requestParameters: NotificationsControllerCreateHnippNotificationRequest,
  ): Promise<runtime.ApiResponse<CreateNotificationResponse>> {
    if (
      requestParameters.createHnippNotificationDto === null ||
      requestParameters.createHnippNotificationDto === undefined
    ) {
      throw new runtime.RequiredError(
        'createHnippNotificationDto',
        'Required parameter requestParameters.createHnippNotificationDto was null or undefined when calling notificationsControllerCreateHnippNotification.',
      )
    }

    const queryParameters: runtime.HTTPQuery = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request({
      path: `/v1/notifications`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: CreateHnippNotificationDtoToJSON(
        requestParameters.createHnippNotificationDto,
      ),
    })

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      CreateNotificationResponseFromJSON(jsonValue),
    )
  }

  /**
   * Creates a new notification and adds to queue
   */
  async notificationsControllerCreateHnippNotification(
    requestParameters: NotificationsControllerCreateHnippNotificationRequest,
  ): Promise<CreateNotificationResponse> {
    const response =
      await this.notificationsControllerCreateHnippNotificationRaw(
        requestParameters,
      )
    return await response.value()
  }
}
