/* tslint:disable */
/* eslint-disable */
/**
 * Notification Service
 * Creates and stores notifications AND sends as mobile push notifications and emails
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../runtime'
import {
  ArgumentDto,
  ArgumentDtoFromJSON,
  ArgumentDtoToJSON,
  HnippNotificationOriginalRecipientDto,
  HnippNotificationOriginalRecipientDtoFromJSON,
  HnippNotificationOriginalRecipientDtoToJSON,
} from './'

/**
 *
 * @export
 * @interface CreateHnippNotificationDto
 */
export interface CreateHnippNotificationDto {
  /**
   *
   * @type {string}
   * @memberof CreateHnippNotificationDto
   */
  recipient: string
  /**
   *
   * @type {string}
   * @memberof CreateHnippNotificationDto
   */
  senderId?: string
  /**
   *
   * @type {HnippNotificationOriginalRecipientDto}
   * @memberof CreateHnippNotificationDto
   */
  onBehalfOf?: HnippNotificationOriginalRecipientDto
  /**
   *
   * @type {string}
   * @memberof CreateHnippNotificationDto
   */
  templateId: string
  /**
   *
   * @type {Array<ArgumentDto>}
   * @memberof CreateHnippNotificationDto
   */
  args: Array<ArgumentDto>
}

export function CreateHnippNotificationDtoFromJSON(
  json: any,
): CreateHnippNotificationDto {
  return CreateHnippNotificationDtoFromJSONTyped(json, false)
}

export function CreateHnippNotificationDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreateHnippNotificationDto {
  if (json === undefined || json === null) {
    return json
  }
  return {
    recipient: json['recipient'],
    senderId: !exists(json, 'senderId') ? undefined : json['senderId'],
    onBehalfOf: !exists(json, 'onBehalfOf')
      ? undefined
      : HnippNotificationOriginalRecipientDtoFromJSON(json['onBehalfOf']),
    templateId: json['templateId'],
    args: (json['args'] as Array<any>).map(ArgumentDtoFromJSON),
  }
}

export function CreateHnippNotificationDtoToJSON(
  value?: CreateHnippNotificationDto | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    recipient: value.recipient,
    senderId: value.senderId,
    onBehalfOf: HnippNotificationOriginalRecipientDtoToJSON(value.onBehalfOf),
    templateId: value.templateId,
    args: (value.args as Array<any>).map(ArgumentDtoToJSON),
  }
}
