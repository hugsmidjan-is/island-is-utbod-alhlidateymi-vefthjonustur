import { findRegulationType } from './guessers'

describe('findRegulationType', () => {
  it('defaults to returning undefined for empty or non-sensical titles', () => {
    expect(findRegulationType('')).toEqual(undefined)
    expect(findRegulationType('L√∂g um part√≠stu√∞')).toEqual(undefined)
    expect(findRegulationType('Reluger√∞ um part√≠stu√∞')).toEqual(undefined)
  })
  it('returns "base" when it finds the word Regluger√∞ whenever in doubt', () => {
    expect(findRegulationType('Regluger√∞ um j√≥lasveina')).toEqual('base')
  })

  it('detects "amending" regulation titles', () => {
    expect(
      findRegulationType(
        'Regluger√∞ um breytingu √° regluger√∞ 123/2022 um j√≥lasveina',
      ),
    ).toEqual('amending')
    // Regulation number (123/2022) is not required
    expect(
      findRegulationType('Regluger√∞ um breytingu √° regluger√∞ um j√≥lasveina'),
    ).toEqual('amending')
    // Accepts the plural form "breytingar"
    expect(
      findRegulationType(
        'Regluger√∞ um breytingar √° regluger√∞ 123/2022 um j√≥lasveina',
      ),
    ).toEqual('amending')
    // Accepts the plural form "regluger√∞um"
    expect(
      findRegulationType(
        'Regluger√∞ um breytingu √° regluger√∞um nr. 23/2022 um j√≥lasveina og Byggingaregluger√∞ nr 112/2012',
      ),
    ).toEqual('amending')
    // Accepts ordinal number in parenthesis
    expect(
      findRegulationType(
        'Regluger√∞ um (2.) breytingu √° regluger√∞ 123/2022 um j√≥lasveina',
      ),
    ).toEqual('amending')
    expect(
      findRegulationType(
        'Regluger√∞ um (102.) breytingu √° regluger√∞ 123/2022 um j√≥lasveina',
      ),
    ).toEqual('amending')
    // Also accepts parenthesis around the ordinal number being missing
    expect(
      findRegulationType(
        'Regluger√∞ um 3. breytingu √° regluger√∞ 123/2022 um j√≥lasveina',
      ),
    ).toEqual('amending')
    // Accepts ordinal number + plural "breytingar"
    expect(
      findRegulationType(
        'Regluger√∞ um (4.) breytingar √° regluger√∞ 123/2022 um j√≥lasveina',
      ),
    ).toEqual('amending')
    // However, is a stickler about the number being an ordinal
    expect(
      findRegulationType(
        'Regluger√∞ um 2 breytingar √° regluger√∞ 123/2022 um j√≥lasveina',
      ),
    ).toEqual('base')
    expect(
      findRegulationType(
        'Regluger√∞ um tv√¶r breytingar √° regluger√∞ 123/2022 um j√≥lasveina',
      ),
    ).toEqual('base')
    // The " √° " between the words "breytingu" and "regluger√∞ar" is mandatory.
    expect(
      findRegulationType(
        'Regluger√∞ um breytingu regluger√∞ar 123/2022 um j√≥lasveina',
      ),
    ).toEqual('base')
    // Not affacted by weird spacing
    expect(
      findRegulationType(
        '\t Regluger√∞¬† um   (2.)\tbreytingu\n √° regluger√∞ \n\n\t\n123/2022  um j√≥lasveina.',
      ),
    ).toEqual('amending')
  })

  it('amending regulation titles must contain the word regluger√∞ as a subject', () => {
    // Actual example
    expect(
      findRegulationType(
        'Regluger√∞ um breytingar √° Byggingaregluger√∞ nr. 112/2012',
      ),
    ).toEqual('amending')
    // Very sloppy title, but passes
    expect(
      findRegulationType('Regluger√∞ um breytingu √° einhverri annari regluger√∞'),
    ).toEqual('amending')
    // Silly title, but (correctly) classified as "base"
    expect(
      findRegulationType('Regluger√∞ um breytingar √° l√∂gum nr. 112/2012'),
    ).toEqual('base')
    // Base regulations may want to do "breytingu √°" some non-"regluger√∞" subject.
    expect(
      findRegulationType('Regluger√∞ um breytingu √° fj√∂lda j√≥lasveina'),
    ).toEqual('base')

    // If you find yourself in this situation, you probably should rethink your life-coices. :-)
    expect(
      findRegulationType(
        'Regluger√∞ um breytingu √° fj√∂lda j√≥lasveina √≠ takt vi√∞ √°kv√¶√∞i √≠ ESB regluger√∞ nr. 1234/2019 um h√°t√≠√∞isdaga',
      ),
    ).toEqual('amending') // üôÄ
    // ...or find a way to subtly re-phrase the beginning of the title, like so:
    expect(
      findRegulationType(
        'Regluger√∞ um f√¶kkun j√≥lasveina √≠ takt vi√∞ √°kv√¶√∞i √≠ ESB regluger√∞ nr. 1234/2019 um h√°t√≠√∞isdaga',
      ),
    ).toEqual('base')
  })

  it('detects "brottfellingarregluger√∞" by title', () => {
    // Actual examples
    expect(
      findRegulationType(
        'Regluger√∞ um a√∞ fella √∫r gildi regluger√∞ um br√©faskipti, s√≠mt√∂l og heims√≥knir til afpl√°nunarfanga',
      ),
    ).toEqual('amending')
    expect(
      findRegulationType(
        'Regluger√∞ um brottfellingu √Ωmissa regluger√∞a, reglna og augl√Ωsinga me√∞ sto√∞ √≠ l√∂gum um almannatryggingar og l√∂gum um f√©lagslega a√∞sto√∞.',
      ),
    ).toEqual('amending')
    expect(
      findRegulationType(
        'Regluger√∞ um brottfellingu regluger√∞a √° svi√∞i heilbrig√∞ism√°la',
      ),
    ).toEqual('amending')
    expect(
      findRegulationType(
        'Regluger√∞ um brottfellingu regluger√∞ar um starfsmannar√°√∞ sj√∫krah√∫sa nr. 413/1973, me√∞ s√≠√∞ari breytingu.',
      ),
    ).toEqual('amending')

    // Some regulations, like the "Byggingaregluger√∞" have a title thta doesn't start with the words "Regluger√∞ um ‚Ä¶"
    expect(
      findRegulationType(
        'Regluger√∞ um brottfellingu Byggingaregluger√∞ar nr. 112/2012',
      ),
    ).toEqual('amending')

    // Imaginary variaants that still should work (becaus we are nice people)
    expect(
      findRegulationType(
        'Regluger√∞ um brottfellingar √° √Ωmsum regluger√∞um √° svi√∞i j√≥lasveinasm√°la',
      ),
    ).toEqual('amending')
    expect(
      findRegulationType(
        'Regluger√∞ um a√∞ fella √∫r gildi √Ωmsar regluger√∞ir um j√≥lasveina',
      ),
    ).toEqual('amending')
    expect(
      findRegulationType(
        'Regluger√∞ um a√∞ fella √∫r gildi regluger√∞ nr. 123/2021 um j√≥lasveina',
      ),
    ).toEqual('amending')
    expect(
      findRegulationType(
        'Regluger√∞ um a√∞ fella √∫r gildi Byggingaregluger√∞ nr. 112 fr√° √°rinu 2012',
      ),
    ).toEqual('amending')

    // So close, but not brottfellingarregluger√∞ir
    expect(
      findRegulationType('Regluger√∞ um a√∞ fella √∫r gildi reglur um Byggingar'),
    ).toEqual('base')
    expect(
      findRegulationType(
        'Regluger√∞ um brottfellingu alls kyns Evr√≥putilskipana',
      ),
    ).toEqual('base')
    expect(
      findRegulationType(
        'Regluger√∞ um Regluger√∞ um gildist√∂ku regluger√∞ar framkv√¶mdastj√≥rnarinnar' +
          ' (ESB) nr. 605/2010 um skilyr√∞i var√∞andi heilbrig√∞i d√Ωra og manna' +
          ' og brottfellingu regluger√∞ar nr. 734/2014 um svipu√∞ m√°l',
      ),
    ).toEqual('base')
  })
})

// ===========================================================================
